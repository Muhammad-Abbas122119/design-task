{"ast":null,"code":"var _jsxFileName = \"D:\\\\js projects\\\\My Attendance Management System\\\\attendance-management-system\\\\src\\\\component\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport MainSection from \"./MainSection\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.changeHandler = event => {\n      // console.log(\"changeHandler called\")\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.teacherLogin = () => {\n      // THIS IF ELSE IS USED TO CREATE TABLE FOR NEW STUDENTS, MEANS TO VISIBLE BOTH PRISENT AND ABSENT BUTTONS FOR ALL THE STUDENTS; \n      if (localStorage.getItem('previousDate') === null) {\n        const date = new Date().toLocaleDateString();\n        localStorage.setItem('previousDate', JSON.stringify(date));\n      } else {\n        const date = new Date().toLocaleDateString();\n        const previousDate = JSON.parse(localStorage.getItem('previousDate'));\n\n        if (date !== previousDate) {\n          let students;\n          localStorage.getItem(this.state.teaEmail) === null ? students = [] : students = JSON.parse(localStorage.getItem(this.state.teaEmail));\n          const newAttendance = students.map(student => {\n            student.isPresent = \"\";\n            return student;\n          });\n          localStorage.setItem(this.state.teaEmail, JSON.stringify(newAttendance));\n          localStorage.setItem('previousDate', JSON.stringify(date)); // console.log(this.state.teaEmail)\n        }\n      }\n\n      if (this.state.teaName === \"\") {\n        alert(\"PLEASE FILL THE NAME FEILD\");\n      } else if (this.state.teaEmail === \"\") {\n        alert(\"PLEASE FILL THE ID FEILD\");\n      } else if (this.state.teaPassword === \"\") {\n        alert(\"PLEASE FILL THE PASSWORD FEILD\");\n      } else {\n        if (JSON.parse(localStorage.getItem(\"registeredTeachers\")) === null) {\n          alert(\"PEALSE REGISTER YOUR SELF\");\n        } else {\n          // the following three variables used to check that the password email and name are matched or not\n          let pass = false;\n          let eml = false;\n          let nam = false;\n          const registeredTeachers = JSON.parse(localStorage.getItem(\"registeredTeachers\"));\n          registeredTeachers.map(person => {\n            if (person.teaRegName === this.state.teaName) {\n              nam = true;\n\n              if (person.teaRegEmail === this.state.teaEmail) {\n                eml = true;\n\n                if (person.teaRegPassword === this.state.teaPassword) {\n                  pass = true;\n                  this.setState({\n                    islogin: true,\n                    teaRegEmail: person.teaRegEmail\n                  });\n                }\n              }\n            }\n          });\n          let msg = !nam ? \"Name does not matched\" : !eml ? \"Email not matched\" : !pass ? \"password not matched\" : null;\n          msg !== null && alert(msg);\n        }\n      }\n    };\n\n    this.toRegisteredAteacher = () => {\n      // THE IF STATEMENT WILL CHECK THAT IS EVERY FIELD FULL OR NOT\n      const msg = this.state.teaRegName === '' ? \"Please enter your name ?\" : this.state.teaRegEmail === '' ? \"Please enter your Email ?\" : this.state.teaRegPassword === '' ? \"Please enter a password\" : null;\n      if (msg !== null) alert(msg);else {\n        const teacher = {\n          teaRegName: this.state.teaRegName,\n          teaRegEmail: this.state.teaRegEmail,\n          teaRegPassword: this.state.teaRegPassword\n        };\n\n        if (localStorage.getItem('registeredTeachers') === null) {\n          let teachers = [];\n          teachers.push(teacher);\n          localStorage.setItem(\"registeredTeachers\", JSON.stringify(teachers));\n        } else {\n          let teachers = JSON.parse(localStorage.getItem('registeredTeachers'));\n          teachers.push(teacher);\n          localStorage.setItem('registeredTeachers', JSON.stringify(teachers));\n        }\n\n        alert(\"You have Successfully registered\"); // console.log(\"teacher has been registered\", teacher)\n      }\n    };\n\n    this.addAstudent = () => {\n      // The following two line code is used for form validation\n      let msg = this.state.stdName === \"\" ? \"Name\" : this.state.stdRollNo === \"\" ? \"Roll No\" : this.state.stdCourse === \"\" ? \"Course\" : this.state.stdClass === \"\" ? \"Class / Semester\" : this.state.stdBranch === \"\" ? \"Branch / Section\" : null;\n      msg !== null && alert(\"Please enter the student \" + msg);\n\n      if (msg === null) {\n        let sno;\n\n        if (localStorage.getItem(this.state.teaRegEmail) === null) {\n          sno = 1;\n        } else {\n          const array = JSON.parse(localStorage.getItem(this.state.teaRegEmail));\n          sno = array[array.length - 1].serNo + 1;\n        }\n\n        const stdObj = {\n          serNo: sno,\n          stdName: this.state.stdName,\n          stdRollNo: this.state.stdRollNo,\n          stdCourse: this.state.stdCourse,\n          stdClass: this.state.stdClass,\n          stdBranch: this.state.stdBranch,\n          isPresent: this.state.isPresent,\n          date: this.state.date\n        };\n\n        if (localStorage.getItem(this.state.teaRegEmail) === null) {\n          const students = [];\n          students.push(stdObj);\n          localStorage.setItem(this.state.teaRegEmail, JSON.stringify(students));\n          this.setState({\n            serNo: students[students.length - 1].serNo + 1\n          });\n        } else {\n          const students = JSON.parse(localStorage.getItem(this.state.teaRegEmail));\n          students.push(stdObj);\n          localStorage.setItem(this.state.teaRegEmail, JSON.stringify(students));\n          this.setState({\n            serNo: students[students.length - 1].serNo + 1\n          }); // console.log(\"Student added\", msg, this.state.teaRegEmail)\n        }\n      }\n\n      this.setState({\n        stdName: \"\",\n        stdRollNo: \"\"\n      });\n    };\n\n    this.present = sno => {\n      const std = JSON.parse(localStorage.getItem(this.state.teaRegEmail));\n      const students = std.map(student => {\n        if (sno === student.serNo) {\n          student.isPresent = \"p\";\n        }\n\n        return student;\n      });\n      localStorage.setItem(this.state.teaRegEmail, JSON.stringify(students)); // console.log(\"present called with id \",sno)\n\n      this.Record();\n      this.setState({\n        stdName: ''\n      });\n    };\n\n    this.absent = sno => {\n      const std = JSON.parse(localStorage.getItem(this.state.teaRegEmail));\n      const students = std.map(student => {\n        if (sno === student.serNo) {\n          student.isPresent = \"a\";\n        }\n\n        return student;\n      });\n      localStorage.setItem(this.state.teaRegEmail, JSON.stringify(students));\n      this.Record();\n      this.setState({\n        stdName: ''\n      });\n    };\n\n    this.delete = sno => {\n      const std = JSON.parse(localStorage.getItem(this.state.teaRegEmail));\n      const students = std.filter(student => {\n        return student.serNo !== sno;\n      });\n      students.length === 0 ? localStorage.removeItem(this.state.teaRegEmail) : localStorage.setItem(this.state.teaRegEmail, JSON.stringify(students));\n      this.setState({\n        stdName: ''\n      });\n    };\n\n    this.Record = () => {\n      // console.log(\"Record function called\");\n      let date = new Date().toLocaleDateString();\n      let lastAttendance = JSON.parse(localStorage.getItem(this.state.teaEmail));\n\n      if (localStorage.getItem(this.state.teaEmail + \"Record\") === null) {\n        const record = [];\n        record.push(date, lastAttendance);\n        localStorage.setItem(this.state.teaEmail + \"Record\", JSON.stringify(record));\n      } else {\n        const record = JSON.parse(localStorage.getItem(this.state.teaEmail + \"Record\"));\n\n        if (record[record.length - 2] === date) {\n          record[record.length - 1] = lastAttendance;\n          localStorage.setItem(this.state.teaEmail + \"Record\", JSON.stringify(record));\n        } else {\n          // THE FOLLOWING MAP FUNCTION IS USED TO CHANGED THE DATE OF THE PRESENT-DAY ATTENDANCE,TO GET A NEW DATE IN RECORD;\n          lastAttendance.map(student => student.date = date);\n          record.push(date, lastAttendance);\n          localStorage.setItem(this.state.teaEmail + \"Record\", JSON.stringify(record));\n        }\n      }\n    };\n\n    this.searchIndividualRecord = () => {\n      let recordList = []; // it will contain the data which matched to the given sno ;\n\n      let records; // it will retrive the data from the record component in the data base;  \n\n      localStorage.getItem(this.state.teaEmail + \"Record\") === null ? records = [] : records = JSON.parse(localStorage.getItem(this.state.teaEmail + 'Record'));\n      records.map((record, topIndex) => {\n        typeof record === 'object' && record.map(student => {\n          student.serNo === parseInt(this.state.searchSno) && recordList.push(student);\n        });\n        return records;\n      }); // console.log('listComponent = ',recordList ,'Email' , this.state.teaEmail, 'sno = ' , this.state.searchSno );\n    };\n\n    this.state = {\n      teaName: \"\",\n      teaEmail: '',\n      teaPassword: \"\",\n      islogin: false,\n      isPresent: \"\",\n      teaRegName: \"\",\n      teaRegEmail: \"\",\n      teaRegPassword: '',\n      stdName: \"\",\n      stdID: \"\",\n      stdRollNo: \"\",\n      stdCourse: \"\",\n      stdClass: \"\",\n      stdBranch: \"\",\n      date: new Date().toLocaleDateString(),\n      searchSno: 2\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MainSection, {\n        changeHandler: this.changeHandler,\n        teacherData: this.state,\n        teacherLogin: this.teacherLogin,\n        toRegisteredAteacher: this.toRegisteredAteacher,\n        addAstudent: this.addAstudent,\n        present: this.present,\n        absent: this.absent,\n        delete: this.delete,\n        searchIndividualRecord: this.searchIndividualRecord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["React","Component","MainSection","App","constructor","changeHandler","event","name","value","target","setState","teacherLogin","localStorage","getItem","date","Date","toLocaleDateString","setItem","JSON","stringify","previousDate","parse","students","state","teaEmail","newAttendance","map","student","isPresent","teaName","alert","teaPassword","pass","eml","nam","registeredTeachers","person","teaRegName","teaRegEmail","teaRegPassword","islogin","msg","toRegisteredAteacher","teacher","teachers","push","addAstudent","stdName","stdRollNo","stdCourse","stdClass","stdBranch","sno","array","length","serNo","stdObj","present","std","Record","absent","delete","filter","removeItem","lastAttendance","record","searchIndividualRecord","recordList","records","topIndex","parseInt","searchSno","stdID","render"],"sources":["D:/js projects/My Attendance Management System/attendance-management-system/src/component/App.jsx"],"sourcesContent":["import React, { Component } from \"react\"\r\nimport MainSection from \"./MainSection\"\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      teaName: \"\",\r\n      teaEmail: '',\r\n      teaPassword: \"\",\r\n\r\n      islogin: false,\r\n      isPresent : \"\",\r\n\r\n      teaRegName: \"\",\r\n      teaRegEmail: \"\",\r\n      teaRegPassword: '',\r\n\r\n      stdName: \"\",\r\n      stdID: \"\",\r\n      stdRollNo: \"\",\r\n      stdCourse: \"\",\r\n      stdClass: \"\",\r\n      stdBranch: \"\",\r\n\r\n      date:new Date().toLocaleDateString(),\r\n\r\n      searchSno:2,\r\n    }\r\n\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    // console.log(\"changeHandler called\")\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n\r\n  }\r\n\r\n  teacherLogin = () => {\r\n    // THIS IF ELSE IS USED TO CREATE TABLE FOR NEW STUDENTS, MEANS TO VISIBLE BOTH PRISENT AND ABSENT BUTTONS FOR ALL THE STUDENTS; \r\n    if(localStorage.getItem('previousDate') === null)\r\n    {\r\n      const date = new Date().toLocaleDateString();\r\n      localStorage.setItem('previousDate' , JSON.stringify(date));\r\n    }\r\n    else\r\n    {\r\n\r\n      const date = new Date().toLocaleDateString(); \r\n      const previousDate = JSON.parse(localStorage.getItem('previousDate'))\r\n\r\n      if(date !== previousDate){\r\n        let students;\r\n          localStorage.getItem(this.state.teaEmail)===null?students=[] :students = JSON.parse(localStorage.getItem(this.state.teaEmail))\r\n\r\n        const newAttendance = students.map(student =>{\r\n          student.isPresent = \"\" ;\r\n          return student;\r\n        })\r\n\r\n        localStorage.setItem(this.state.teaEmail , JSON.stringify(newAttendance));\r\n        localStorage.setItem('previousDate' , JSON.stringify(date));\r\n        // console.log(this.state.teaEmail)\r\n      }\r\n    }\r\n\r\n\r\n    if (this.state.teaName === \"\") {\r\n      alert(\"PLEASE FILL THE NAME FEILD\")\r\n    }\r\n    else if (this.state.teaEmail === \"\") {\r\n      alert(\"PLEASE FILL THE ID FEILD\")\r\n    }\r\n    else if (this.state.teaPassword === \"\") {\r\n      alert(\"PLEASE FILL THE PASSWORD FEILD\")\r\n    }\r\n\r\n    else {\r\n\r\n      if (JSON.parse(localStorage.getItem(\"registeredTeachers\")) === null) {\r\n        alert(\"PEALSE REGISTER YOUR SELF\")\r\n      }\r\n      else {\r\n        // the following three variables used to check that the password email and name are matched or not\r\n        let pass = false;\r\n        let eml = false;\r\n        let nam = false;\r\n        const registeredTeachers = JSON.parse(localStorage.getItem(\"registeredTeachers\"));\r\n        registeredTeachers.map(person => {\r\n          if (person.teaRegName === this.state.teaName) {\r\n            nam = true;\r\n            if (person.teaRegEmail === this.state.teaEmail) {\r\n              eml = true;\r\n              if (person.teaRegPassword === this.state.teaPassword) {\r\n                pass = true;\r\n                this.setState({ islogin: true, teaRegEmail: person.teaRegEmail })\r\n              }\r\n            }\r\n          }\r\n        })\r\n\r\n        let msg = !nam ? \"Name does not matched\" : !eml ? \"Email not matched\" : !pass ? \"password not matched\" : null\r\n        msg !== null && alert(msg);\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  toRegisteredAteacher = () => {\r\n    // THE IF STATEMENT WILL CHECK THAT IS EVERY FIELD FULL OR NOT\r\n\r\n    const msg = this.state.teaRegName === '' ? \"Please enter your name ?\" : this.state.teaRegEmail === '' ? \"Please enter your Email ?\" : this.state.teaRegPassword === '' ? \"Please enter a password\" : null;\r\n    if (msg !== null)\r\n      alert(msg);\r\n\r\n    else {\r\n\r\n      const teacher = {\r\n        teaRegName: this.state.teaRegName,\r\n        teaRegEmail: this.state.teaRegEmail,\r\n        teaRegPassword: this.state.teaRegPassword\r\n      }\r\n\r\n      if (localStorage.getItem('registeredTeachers') === null) {\r\n        let teachers = [];\r\n\r\n        teachers.push(teacher);\r\n        localStorage.setItem(\"registeredTeachers\", JSON.stringify(teachers));\r\n      }\r\n      else {\r\n        let teachers = JSON.parse(localStorage.getItem('registeredTeachers'));\r\n        teachers.push(teacher);\r\n        localStorage.setItem('registeredTeachers', JSON.stringify(teachers));\r\n      }\r\n\r\n      alert(\"You have Successfully registered\")\r\n      // console.log(\"teacher has been registered\", teacher)\r\n    }\r\n\r\n  }\r\n\r\n  addAstudent = () => {\r\n    // The following two line code is used for form validation\r\n    let msg = this.state.stdName === \"\" ? \"Name\" : this.state.stdRollNo === \"\" ? \"Roll No\" : this.state.stdCourse === \"\" ? \"Course\" : this.state.stdClass === \"\" ? \"Class / Semester\" : this.state.stdBranch === \"\" ? \"Branch / Section\" : null;\r\n    msg !== null && alert(\"Please enter the student \" + msg);\r\n\r\n    if (msg === null) {\r\n\r\n      let sno ;\r\n      if(localStorage.getItem(this.state.teaRegEmail) === null)\r\n      {\r\n        sno = 1;\r\n      }\r\n      else\r\n      {\r\n        const array  = JSON.parse(localStorage.getItem(this.state.teaRegEmail));\r\n        sno = array[array.length-1].serNo+1;\r\n      }\r\n        const stdObj = {\r\n          serNo:sno,\r\n          stdName: this.state.stdName,\r\n          stdRollNo: this.state.stdRollNo,\r\n          stdCourse: this.state.stdCourse,\r\n          stdClass: this.state.stdClass,\r\n          stdBranch: this.state.stdBranch,\r\n          isPresent:this.state.isPresent,\r\n          date :this.state.date\r\n        }\r\n\r\n      if (localStorage.getItem(this.state.teaRegEmail) === null) {\r\n        const students = [];\r\n        students.push(stdObj);\r\n        localStorage.setItem(this.state.teaRegEmail, JSON.stringify(students));\r\n        this.setState({serNo:students[students.length-1].serNo+1})\r\n      }\r\n\r\n      else {\r\n        const students = JSON.parse(localStorage.getItem(this.state.teaRegEmail));\r\n        \r\n\r\n        students.push(stdObj);\r\n        \r\n        localStorage.setItem(this.state.teaRegEmail, JSON.stringify(students));\r\n        this.setState({serNo:students[students.length-1].serNo+1});\r\n        // console.log(\"Student added\", msg, this.state.teaRegEmail)\r\n      }\r\n    }\r\n    this.setState({ stdName: \"\", stdRollNo: \"\"})\r\n  }\r\n\r\n  present = (sno) =>{\r\n\r\n    const std = JSON.parse(localStorage.getItem(this.state.teaRegEmail));\r\n    const students = std.map(student =>{\r\n      if(sno === student.serNo)\r\n      {\r\n        student.isPresent = \"p\"\r\n      }\r\n      return student;\r\n    }) \r\n    \r\n    localStorage.setItem(this.state.teaRegEmail , JSON.stringify(students));\r\n    // console.log(\"present called with id \",sno)\r\n    \r\n    this.Record();\r\n    this.setState({stdName:''});\r\n  }\r\n\r\n  absent = (sno) =>{\r\n\r\n    const std = JSON.parse(localStorage.getItem(this.state.teaRegEmail));\r\n    const students = std.map(student =>{\r\n      if(sno === student.serNo)\r\n      {\r\n        student.isPresent = \"a\"\r\n      }\r\n      return student;\r\n    }) \r\n    \r\n    localStorage.setItem(this.state.teaRegEmail , JSON.stringify(students));\r\n    this.Record();\r\n    this.setState({stdName:''});\r\n  }\r\n\r\ndelete = (sno)=>{\r\n\r\n  const std = JSON.parse(localStorage.getItem(this.state.teaRegEmail));\r\n  const students = std.filter((student)=>{\r\n    return student.serNo !== sno\r\n  })\r\n  students.length === 0 ?localStorage.removeItem(this.state.teaRegEmail) : localStorage.setItem(this.state.teaRegEmail , JSON.stringify(students));\r\n  \r\n  this.setState({stdName:''})\r\n}\r\n\r\nRecord = () =>{\r\n  // console.log(\"Record function called\");\r\n  let date = new Date().toLocaleDateString();\r\n  let lastAttendance = JSON.parse(localStorage.getItem(this.state.teaEmail));\r\n\r\n\r\n  if(localStorage.getItem(this.state.teaEmail+\"Record\") === null)\r\n  {\r\n    const record =[];\r\n    record.push(date,lastAttendance);\r\n    localStorage.setItem(this.state.teaEmail+\"Record\",JSON.stringify(record)) \r\n  }\r\n\r\n  else\r\n  {\r\n    const record = JSON.parse(localStorage.getItem(this.state.teaEmail+\"Record\"));\r\n    \r\n    if(record[record.length-2] === date){\r\n      record[record.length-1] = lastAttendance;\r\n      localStorage.setItem(this.state.teaEmail+\"Record\" , JSON.stringify(record));\r\n    }\r\n\r\n    else{\r\n\r\n      // THE FOLLOWING MAP FUNCTION IS USED TO CHANGED THE DATE OF THE PRESENT-DAY ATTENDANCE,TO GET A NEW DATE IN RECORD;\r\n      lastAttendance.map(student =>student.date = date)\r\n\r\n      record.push(date,lastAttendance);\r\n      localStorage.setItem(this.state.teaEmail+\"Record\" , JSON.stringify(record));\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nsearchIndividualRecord = ()=>\r\n{\r\n  let recordList=[]; // it will contain the data which matched to the given sno ;\r\n  let records;  // it will retrive the data from the record component in the data base;  \r\n\r\n  localStorage.getItem(this.state.teaEmail + \"Record\")===null? records=[]:records = JSON.parse(localStorage.getItem(this.state.teaEmail + 'Record'));\r\n\r\n  records.map((record , topIndex)=>{\r\n    typeof(record) === 'object' && record.map(student=>{student.serNo === parseInt (this.state.searchSno) && recordList.push(student) ;});\r\n    return records;\r\n  })\r\n\r\n  // console.log('listComponent = ',recordList ,'Email' , this.state.teaEmail, 'sno = ' , this.state.searchSno );\r\n}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        \r\n        <MainSection\r\n          changeHandler={this.changeHandler}\r\n          teacherData={this.state}\r\n          teacherLogin={this.teacherLogin}\r\n          toRegisteredAteacher={this.toRegisteredAteacher}\r\n          addAstudent={this.addAstudent}\r\n          present = {this.present}\r\n          absent = {this.absent}\r\n          delete = {this.delete}\r\n          searchIndividualRecord = {this.searchIndividualRecord}\r\n        />\r\n         \r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}